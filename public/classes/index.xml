<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chapter 4: Classes :: Java Web Development</title>
    <link>http://localhost:1313/classes/index.html</link>
    <description>Learning Objectives After completing this chapter, you should be able to understand the following:&#xA;The difference betwen public and private modifiers Encapsulation and its role in Object-oriented Programming Constructors and their relationship with other Java classes How to declare and define a new method Method overloading Key Terminology Throughout this lesson you should make note of the following terms and their definitions as you read the content on the page:</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jan 2023 13:36:52 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/classes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reading</title>
      <link>http://localhost:1313/classes/reading/index.html</link>
      <pubDate>Mon, 23 Jan 2023 13:36:52 -0600</pubDate>
      <guid>http://localhost:1313/classes/reading/index.html</guid>
      <description>Content Links Classes for Java Modifiers in Java Encapsulation Constructors Methods Single Responsibility Principle </description>
    </item>
    <item>
      <title>Exercises</title>
      <link>http://localhost:1313/classes/exercises/index.html</link>
      <pubDate>Mon, 23 Jan 2023 13:36:52 -0600</pubDate>
      <guid>http://localhost:1313/classes/exercises/index.html</guid>
      <description>Classes and Objects Work on these exercises in the classes-part-one directory in java-web-dev-projects.&#xA;Note If you have not already cloned the java-web-dev-projects project repository you can find it here: Java Web Dev Projects Repository Open up the file, Student.java, and add all of the necessary getters and setters. Think about the access level each field and method should have, and try reducing the access level of at least one setter to less than public.</description>
    </item>
    <item>
      <title>Studio: Restaurant Menu</title>
      <link>http://localhost:1313/classes/studio/index.html</link>
      <pubDate>Mon, 23 Jan 2023 13:36:52 -0600</pubDate>
      <guid>http://localhost:1313/classes/studio/index.html</guid>
      <description>Let’s practice designing classes using the following scenario. You’ve been hired to create a web application for a local restaurant. They want to both display their current menu and edit it through an admin panel.&#xA;You’re not going to build an actual application in this studio. Instead, you will focus on the design of a portion of this application. Object-oriented programming in Java requires intentional, up-front planning. While this may seem tedious, outlining your ideas before you code helps reduce the errors you need to fix later.</description>
    </item>
    <item>
      <title>Next Steps</title>
      <link>http://localhost:1313/classes/next-steps/index.html</link>
      <pubDate>Mon, 23 Jan 2023 13:36:52 -0600</pubDate>
      <guid>http://localhost:1313/classes/next-steps/index.html</guid>
      <description>Next Steps This was just an introduction to classes in Java. We will continue to learn more in the next chapter. If you would like an additional review on this topic before starting the next chapter, check out the following articles.&#xA;Oracle Java Tutorials - Classes and Objects W3Schools Java Classes/Objects Tutorial Java Classes and Objects - GeeksforGeeks Java Classes - Baeldung </description>
    </item>
  </channel>
</rss>