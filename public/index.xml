<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java Web Development</title>
    <link>http://localhost:1313/index.html</link>
    <description>Java Web Development Course Summary This course is an introduction to Java and the Spring Boot framework. Java is a powerful programming language and one of the most widely used across the globe. This course is designed for learners who are already familiar with at least one programming language. Thus, we’ll move quickly through the syntax rules and procedural basics of the language (ie, how does one write a for loop in Java?</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Aug 2023 14:38:32 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chapter 1: Introduction and Setup</title>
      <link>http://localhost:1313/intro-and-setup/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/intro-and-setup/index.html</guid>
      <description>Learning Objectives Upon completing all the content in this chapter, you should be able to do the following:&#xA;Set up a Java development environment and execute Java programs. Write a “Hello, World!” program in Java. Connect an IntelliJ project to GitHub. Key Terminology Here is a list of the terms you should make note of as you read through this chapter. The list is broken down based on the page the word first appears on.</description>
    </item>
    <item>
      <title>Chapter 2: Data Types</title>
      <link>http://localhost:1313/data-types/index.html</link>
      <pubDate>Wed, 14 Jun 2023 09:27:57 -0500</pubDate>
      <guid>http://localhost:1313/data-types/index.html</guid>
      <description>Major Concepts By the end of this lesson, you should be able to do the following:&#xA;Set up a Java development environment and execute Java programs Understand Java’s data type system Understand the differences between dynamic and static types Understand the differences between primitive and non-primitive types Write simple Java programs Key Terminology Data Types dynamically typed statically typed type system boxing unboxing autoboxing Some Java Practice encapsulate import Scanner package // / * .</description>
    </item>
    <item>
      <title>Chapter 3: Control Flow and Collections</title>
      <link>http://localhost:1313/control-flow-and-collections/index.html</link>
      <pubDate>Thu, 22 Jun 2023 09:45:23 -0500</pubDate>
      <guid>http://localhost:1313/control-flow-and-collections/index.html</guid>
      <description>Learning Objectives Upon completing all the material in this chapter, you should be able to do the following:&#xA;Use basic control flow structures Create and work with common collections objects Understand how to choose a collection type for a given problem Key Terminology Here is a list of the key terms you will find throughout the chapter organized by the page upon which they first appear.&#xA;Conditionals Operators if statements else clause else if switch case break fallthrough Loops for loop for-each loop while loop do-while loop continue Collections collections Java Collections Framework ArrayList ArrayList generic class generic type ArrayList.</description>
    </item>
    <item>
      <title>Chapter 4: Classes</title>
      <link>http://localhost:1313/classes/index.html</link>
      <pubDate>Mon, 23 Jan 2023 13:36:52 -0600</pubDate>
      <guid>http://localhost:1313/classes/index.html</guid>
      <description>Learning Objectives After completing this chapter, you should be able to understand the following:&#xA;The difference betwen public and private modifiers Encapsulation and its role in Object-oriented Programming Constructors and their relationship with other Java classes How to declare and define a new method Method overloading Key Terminology Throughout this lesson you should make note of the following terms and their definitions as you read the content on the page:</description>
    </item>
    <item>
      <title>Chapter 5: Classes Part 2</title>
      <link>http://localhost:1313/classes-part-2/index.html</link>
      <pubDate>Wed, 14 Jun 2023 16:06:05 -0500</pubDate>
      <guid>http://localhost:1313/classes-part-2/index.html</guid>
      <description>Major Concepts When you have completed this chapter, you should be familiar with the following:&#xA;How to customize fields with the keywords final and static. How to add methods to a class and call those methods. The difference between instance methods and static methods. How to override the default toString and equals methods for a class. How to auto-generate an equals method using the tools in IntelliJ. Key Terminology Final Field Final Primitive Field Final Object Field Static Methods Class Methods Overriding Cast Equality Identity Content Links Reading Exercises: Objects and Classes Part 2 Studio: Restaurant Menu Continued Next Steps </description>
    </item>
    <item>
      <title>Chapter 6: Unit Testing</title>
      <link>http://localhost:1313/unit-testing/index.html</link>
      <pubDate>Wed, 28 Jun 2023 13:58:37 -0500</pubDate>
      <guid>http://localhost:1313/unit-testing/index.html</guid>
      <description>Major Concepts Upon completing all the content in this chapter, you should be able to do the following:&#xA;Write unit tests to verify the behavior of methods Identify proper behaviors for which a test should be written Understand the importance of testing in creating well-functioning code Use test-driven development to define the behavior of code before writing it, and to ensure that code is properly tested Use JUnit to create tests Key Terminology Throughout this lesson you should make note of the following terms and their definitions as you read the content on the page.</description>
    </item>
    <item>
      <title>Chapter 7: Inheritance</title>
      <link>http://localhost:1313/inheritance/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/inheritance/index.html</guid>
      <description>Learning Objectives After completing this chapter, you should be able to do the following:&#xA;Understand what inheritance is and how programmers can use it. Understand what abstract classes and methods are. Learn how to formally diagram classes and the relationships between classes. Key Terminology As you read through the chapter, look for the following key words.&#xA;Inheritance Inheritance Subtyping Inheritance in Java Extends Subclass Child class Super class Base class Parent class Derived class Object class A Tale of Two Cats base no-arg constructor override method overriding Inheritance from Abstraction Abstraction abstract Abstract class Abstract method Casting Runtime exception Polymorphism Class Diagrams Class diagrams One-to-One Relationship One-to-Many relationship Content Links Reading Exercises: Inheritance Studio: Fun with Quizzes </description>
    </item>
    <item>
      <title>Chapter 8: Interfaces and Polymorphism</title>
      <link>http://localhost:1313/interfaces/index.html</link>
      <pubDate>Thu, 15 Jun 2023 14:01:05 -0500</pubDate>
      <guid>http://localhost:1313/interfaces/index.html</guid>
      <description>Major Concepts After completing everything in this chapter, you should be able to understand the following:&#xA;What polymorphism is. What interfaces are and the difference between interfaces and abstract classes. Different interfaces that are a part of Java, and how they can be used in our code. Best practices around unit tests and interfaces. Key Terminology Polymorphism Interface Method signature Default method Comparable&lt;T&gt; Comparator&lt;T&gt; Iterable&lt;T&gt; List&lt;E&gt; Map&lt;K,V&gt; Content Links Reading Exercises: Interfaces and Polymorphism Studio: Spinning the Discs Next Steps </description>
    </item>
    <item>
      <title>Chapter 9: Spring Into MVC</title>
      <link>http://localhost:1313/spring-intro/index.html</link>
      <pubDate>Mon, 03 Jul 2023 16:28:46 -0500</pubDate>
      <guid>http://localhost:1313/spring-intro/index.html</guid>
      <description>Learning Objectives After completing all the content in this chapter, you should be able to do the following:&#xA;Understand the basic architecture of an MVC web application Initialize a Spring Boot application Key Terminology Here is a list of key terms you should make note of based on the page on which they first appear.&#xA;Design Patterns, MVC, and Spring, Oh My! design patterns Model-View-Controller model view controller Spring Spring Boot Spring MVC Tomcat Initialize Spring Gradle Chapter Content Reading Next Steps </description>
    </item>
    <item>
      <title>Chapter 10: Controllers and Routing</title>
      <link>http://localhost:1313/controllers-and-routing/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/controllers-and-routing/index.html</guid>
      <description>Learning Objectives Understand the basic architecture of an MVC web application Build a Spring application that can handle various types of requests Key Terminology Simple Controllers route Controllers endpoint routing Conventional routing attribute routing action method attribute [HttpGet] [HttpPost] [Route(“path”)] Controllers with Parameters query string Cleaning Up Your Controllers attribute routing attributes Content Links Reading Exercises Studio: Skills Tracker </description>
    </item>
    <item>
      <title>Chapter 11: Rules to the Exceptions</title>
      <link>http://localhost:1313/exceptions/index.html</link>
      <pubDate>Wed, 19 Jul 2023 15:35:30 -0500</pubDate>
      <guid>http://localhost:1313/exceptions/index.html</guid>
      <description>Learning Objectives Upon completing all the content in this chapter, you should be able to do the following:&#xA;Understand what exceptions are. Understand how to use exceptions and interpret them. Key Terminology Here is a list of key terms that you should make note of as you read through this chapter.&#xA;Check the Temperature with Exceptions compile-time exception runtime exception Chapter Content Reading Exercises: Exceptions Next Steps </description>
    </item>
    <item>
      <title>Chapter 12: Tools in Intellij</title>
      <link>http://localhost:1313/tools-in-intellij/index.html</link>
      <pubDate>Wed, 12 Jul 2023 10:22:37 -0500</pubDate>
      <guid>http://localhost:1313/tools-in-intellij/index.html</guid>
      <description>Learning Objectives Upon completing all the content in this chapter, you should be able to do the following:&#xA;Understand the role of Gradle in a Spring Boot project Key Terminology Throughout this lesson you should make note of the following terms and their definitions as you read the content on the page.&#xA;Gradle automated build tool projects tasks plugins dependencies repositories Debugging in IntelliJ breakpoint Debug mode Debugger Pane Add/Watch conditional breakpoint Step-over Step-into Step-out-of Variables Pane Frames Pane Chapter Content Reading Studio: If It Ain&#39;t Broke, Add a Breakpoint!</description>
    </item>
    <item>
      <title>Chapter 13: Thymeleaf Views</title>
      <link>http://localhost:1313/thymeleaf-views/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/thymeleaf-views/index.html</guid>
      <description>Learning Objectives By the end of this chapter you should understand:&#xA;The benefits of using templates How to create a new template using thymeleaf in a Spring Application. How to add iteration, conditionals, and forms to a template How to link a template to static resources like CSS stylesheets, and scripts. How to render a template using Spring controllers. Key Terminology fragments cdn, content delivery network template Thymeleaf bootstrap Content Links Reading Exercises: Thymeleaf Views Studio: Spa Day!</description>
    </item>
    <item>
      <title>Chapter 14: Models and Model Binding</title>
      <link>http://localhost:1313/models-and-model-binding/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/models-and-model-binding/index.html</guid>
      <description>Learning Objectives After completing everything in this chapter, you should be able to do the following:&#xA;Understand the role of models in MVC applications Use model binding to efficiently create objects during form processing Key Terminology On each page of the reading, make note of the following key terms and their definitions.&#xA;Models in MVC model business logic Creating a Model Class POJO Models and Data uid unique identifier data layer Model-Binding model-binding @ModelAttribute Content Links Reading Exercises: Edit Model Classes Studio: Spa User Signup </description>
    </item>
    <item>
      <title>Chapter 15: Model Validation</title>
      <link>http://localhost:1313/spring-model-validation/index.html</link>
      <pubDate>Mon, 17 Jul 2023 15:23:11 -0500</pubDate>
      <guid>http://localhost:1313/spring-model-validation/index.html</guid>
      <description>Learning Objectives Upon completing all the content in this chapter, you should be able to do the following:&#xA;Validate form submission data using annotations and model binding Key Terminology Here is a list of key terms for this chapter listed by the page the terms first appear on.&#xA;Server-Side Validation client-side validation server-side validation Thymeleaf Form Tools no-arg constructor Chapter Content Reading Exercises: Model Validation Studio: Spa User Validation Next Steps </description>
    </item>
    <item>
      <title>Chapter 16: Enums</title>
      <link>http://localhost:1313/enums/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/enums/index.html</guid>
      <description>Learning Objectives Once you have completed everything in the chapter, you should be able to do the following:&#xA;Use enum types to represent categories of related objects Key Terminology Here is a list of key terms that you should make note of as you read through this chapter.&#xA;enumeration types enums select log level Content Links Reading Exercises: Enum Practice Next Steps </description>
    </item>
    <item>
      <title>Chapter 17: Introduction to Object-Relational Mapping</title>
      <link>http://localhost:1313/intro-orm-mapping/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/intro-orm-mapping/index.html</guid>
      <description>Learning Objectives Understand how object-relational mapping allows object-oriented web applications to store data in relational databases Implement ORM for individual, non-related entities in Spring Boot Explain what object-relational mapping means Describe what a data layer is, and how it is used in ORM Key Terminology Here is a list of key terms that you should make note of as you read through this chapter.&#xA;Object-Relational Mapping Object-Relation Mapping ORM Java Persistence API JPA Data Layer object-relational mapper Environment Variables Hibernate Accessing Data CrudRepository @Repository @Entity @Id @GeneratedValue persistent class entity class Repositories @Autowired Content Links Reading Exercises: OMG the ORM!</description>
    </item>
    <item>
      <title>Chapter 18: Relationships in Object-Relational Mapping</title>
      <link>http://localhost:1313/orm-relationships/index.html</link>
      <pubDate>Mon, 21 Aug 2023 14:38:32 -0500</pubDate>
      <guid>http://localhost:1313/orm-relationships/index.html</guid>
      <description>Learning Objectives Upon completing the content in this chapter, you should be able to do the following:&#xA;Build persistent model classes that have one-to-many, many-to-one, one-to-one, and many-to-many relationships Understand how these relationships are represented in a relational database Key Terminology As you read though this chapter, make note of the following key terms and their definitions.&#xA;Types of Relationships one-to-one relationship one-to-many relationship many-to-one relationship many-to-many relationship Creating a Many-to-One Relationship truncate Creating a One-to-One Relationship transient cascades Creating a Many-to-Many Relationship data transfer object DTO join table Chapter Content Reading Exercises: The Early Bird Gets the ORM!</description>
    </item>
    <item>
      <title>Chapter 19: Authentication</title>
      <link>http://localhost:1313/authentication/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/authentication/index.html</guid>
      <description>Learning Objectives After completing this chapter, you should be able to do the following:&#xA;Understand the basic concepts of authentication Use request filters to enable basic authentication in a Spring app Explain what two-way encryption is, and why it is not ideal for storing sensitive user data, such as passwords Explain what a one-way hash is, and why it presents greater security for storing sensitive user data Describe the characteristics of a good one-way hash function Write code that uses a provided hash function to hash sensitive data Describe how one-way hashes allow for passwords to be compared Describe the general authentication flow for a web app Key Terminology Introduction to Authentication cookies authorization authentication sessions Hashing Password two-way encryption one-way encryption password hashing collision bcrypt MD5, SHA1 hash function Creating a User Model bcrypt query methods Filtering Requests request filters whitelist code-based configuration Content Links Reading Studio: TechJobs Authentication Next Steps </description>
    </item>
    <item>
      <title>Chapter 20: Introduction to Web APIs &amp; REST</title>
      <link>http://localhost:1313/web-api-rest/index.html</link>
      <pubDate>Fri, 01 Oct 2021 09:28:27 -0500</pubDate>
      <guid>http://localhost:1313/web-api-rest/index.html</guid>
      <description>Learning Objectives After completing this chapter, you should be able to do the following:&#xA;Submit HTTP requests using Postman to an API and receive the expected response GET POST DELETE Submit a bad HTTP reuqest, understand the response and how to fix it You should also have an understanding of the following:&#xA;HTTP methods Endpoints Status Codes Headers API design Key Terminology Web APIs API Web API Server-side rendering Client-side rendering data presentation data representation state What is REST REST RESTful web services Representational state transfer JSON serialization JASON deserialization resource resource entity resource collection REST: Practical Fundamentals Shape Endpoint Content Links Reading Exercises: Web APIs and REST Studio: Consuming the Coding Events API With Postman Next Steps </description>
    </item>
    <item>
      <title>Assignments</title>
      <link>http://localhost:1313/assignments/index.html</link>
      <pubDate>Mon, 22 May 2023 10:20:54 -0500</pubDate>
      <guid>http://localhost:1313/assignments/index.html</guid>
      <description>Major Concepts &amp; Key Terminology Content Links Assignment #0: Hello, World! Assignment #1: Tech Jobs Console Assignment #2: Tech Jobs OO Assignment #3: Tech Jobs (MVC Edition) Assignment #4: Tech Jobs Persistent Next Steps </description>
    </item>
    <item>
      <title>Appendices</title>
      <link>http://localhost:1313/appendices/index.html</link>
      <pubDate>Fri, 20 Jan 2023 08:49:09 -0600</pubDate>
      <guid>http://localhost:1313/appendices/index.html</guid>
      <description>Content Links Installing Postman </description>
    </item>
  </channel>
</rss>