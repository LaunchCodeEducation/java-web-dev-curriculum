<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chapter 15: Model Validation :: Java Web Development</title>
    <link>http://localhost:1313/spring-model-validation/index.html</link>
    <description>Learning Objectives Upon completing all the content in this chapter, you should be able to do the following:&#xA;Validate form submission data using annotations and model binding Key Terminology Here is a list of key terms for this chapter listed by the page the terms first appear on.&#xA;Server-Side Validation client-side validation server-side validation Thymeleaf Form Tools no-arg constructor Chapter Content Reading Exercises: Model Validation Studio: Spa User Validation Next Steps </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Jul 2023 15:23:11 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/spring-model-validation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reading</title>
      <link>http://localhost:1313/spring-model-validation/reading/index.html</link>
      <pubDate>Mon, 17 Jul 2023 15:23:11 -0500</pubDate>
      <guid>http://localhost:1313/spring-model-validation/reading/index.html</guid>
      <description>Reading Content Links Server-Side Validation Validation Annotations Validating Models in a Controller Thymeleaf Form Tools </description>
    </item>
    <item>
      <title>Exercises: Model Validation</title>
      <link>http://localhost:1313/spring-model-validation/exercises/index.html</link>
      <pubDate>Mon, 17 Jul 2023 15:23:11 -0500</pubDate>
      <guid>http://localhost:1313/spring-model-validation/exercises/index.html</guid>
      <description>Let’s practice adding more fields onto our event objects and validating them. Create a new branch from your own display-errors branch. Here’s the display-errors branch on CodingEventsJava if you need to get up to speed.&#xA;Below, we describe some new fields for you to add to the Event class. For each field, consider the following factors:&#xA;What will you call your field? Will you need accessors for this field? What type of input should be added to capture the field’s information from the user?</description>
    </item>
    <item>
      <title>Studio: Spa User Validation</title>
      <link>http://localhost:1313/spring-model-validation/studio/index.html</link>
      <pubDate>Mon, 17 Jul 2023 15:23:11 -0500</pubDate>
      <guid>http://localhost:1313/spring-model-validation/studio/index.html</guid>
      <description>We’ll build on the User Signup studio from last class, adding in model validation.&#xA;Getting Started Open up your spaday application and checkout the user-signup-pt2 branch.&#xA;Add Validation Annotations Navigate to the User model class. Add validation annotations to ensure these conditions are satisfied:&#xA;Username, password, and verify are required (they can’t be empty) Username is between 5 and 15 characters Email is optional If provided, the email has the format of a valid email address.</description>
    </item>
    <item>
      <title>Next Steps</title>
      <link>http://localhost:1313/spring-model-validation/next-steps/index.html</link>
      <pubDate>Mon, 17 Jul 2023 15:23:11 -0500</pubDate>
      <guid>http://localhost:1313/spring-model-validation/next-steps/index.html</guid>
      <description>Before diving into the next chapter, here are some of our favorite resources on model validation in Spring Boot in case you want to review them.&#xA;Validation in Spring Boot Validating Form Input </description>
    </item>
  </channel>
</rss>